#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  pipelineTriggers([cron('H 07 * * *')]),
  parameters([
    string(name: 'URL_TO_TEST', defaultValue: 'http://wa-workflow-api-aat.service.core-compute-aat.internal', description: 'The URL you want to run these tests against'),
    string(name: 'SecurityRules',
      defaultValue: 'https://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf',
      description: 'The URL you want to run these tests against'),
  ])
])

@Library("Infrastructure")

def type = "java"
def product = "wa"
def component = "workflow-api"

def secrets = [
  'wa-${env}' : [
    secret('ld-secret', 'LAUNCH_DARKLY_SDK_KEY'),
  ],
  's2s-${env}': [
    secret('microservicekey-wa-workflow-api', 'S2S_SECRET_WORKFLOW_API'),
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

withNightlyPipeline(type, product, component) {
  env.TEST_URL = params.URL_TO_TEST
  env.Rules = params.SecurityRules
  env.IDAM_URL = "https://idam-api.aat.platform.hmcts.net"
  env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  env.CAMUNDA_URL = "http://camunda-api-aat.service.core-compute-aat.internal/engine-rest"
  env.WA_TASK_MANAGEMENT_API_URL = "http://wa-task-management-api-{{ .Values.global.environment }}.service.core-compute-{{ .Values.global.environment }}.internal"

  enableSecurityScan()
//  enableFortifyScan()
  enableMutationTest()
  loadVaultSecrets(secrets)
  enableFullFunctionalTest()
  enableSlackNotifications('#wa-build')

  after('fortify-scan') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
  }
}


